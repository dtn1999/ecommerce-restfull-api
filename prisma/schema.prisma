generator client {
  provider        = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int     @default(autoincrement()) @id
  email     String  @unique
  firstName String
  lastName  String
  // Relation fields

  
  tokens      Token[]
  notifications Notification[]

}

model UserAddress {
  id Int @default( autoincrement() ) @id
  address String 
  city String
  country String
  zip_code String 
  phonenumber String

  userId Int
  User User @relation( fields:[userId],references:[id])
}

model Token {
  id         Int       @default(autoincrement()) @id
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  tokenType  String       
  emailToken String?   @unique // Only used for short lived email tokens
  valid      Boolean   @default(true)
  expiration DateTime
  // Relation fields
  user   User @relation(fields: [userId], references: [id])
  userId Int
}

model Shop {
  id Int @default( autoincrement() )  @id
  name String 
  phoneNumber String
  currency String 
  address_street String
  address_city String
  address_country String
  address_zipCode Int
  userId Int @unique
  user User @relation(fields: [userId], references:[id])
  
  products Product[]
}

model Product {
  id Int @default( autoincrement()) @id
  name String @unique
  description String
  stockQuantity Int
  unitPrice Float
  
  categoryId Int 
  category Category @relation( fields:[categoryId], references:[id])
  
  shopId Int
  Shop Shop @relation(fields: [shopId],references:[id])
  productImages ProductImages[]
  reviews Review[]
  reductions ProductReduction[]
}

model Review {
  id Int @default( autoincrement()) @id
  rating Int 
  comment String?
  productId Int
  userId Int  
  product Product @relation( fields:[productId], references:[id])
  user User @relation( fields:[userId] , references:[id])
}

model Order {
  id Int @default( autoincrement() ) @id
  updatedAt DateTime @updatedAt
  createdAt DateTime @default( now())

  status String
  userId Int 
  User User @relation( fields:[userId], references:[id])
  OrderLines OrderLine[]
}

model OrderLine {
  id Int @default( autoincrement() ) @id
  quantity Int
  productId Int
  orderId Int 
  
  Product Product @relation( fields:[productId], references:[id])
  Order Order @relation( fields:[orderId], references:[id])
}


model ProductImages {
  id Int @default( autoincrement() ) @id
  url String @unique
  mimetype String
  originalName String
  size Float
  productId Int
  product Product @relation(fields: [productId], references:[id])
}


model Category {
  id Int @default( autoincrement()) @id
  name String @unique

  products Product[]
}


model Notification {
  id Int @default( autoincrement()) @id
  about String
  message String
  readed Boolean @default(false)
  userId Int
  user User @relation(fields: [userId],references:[id])
}


model Reduction {
  id Int @default( autoincrement() ) @id
  percentage Int
  
  products ProductReduction[]
}


model ProductReduction{
  endDate DateTime
  
  productId Int
  reductionId Int

  Product Product @relation( fields:[productId], references:[id])
  Reduction Reduction @relation( fields:[reductionId],references:[id])

  @@id([productId,reductionId])
}


model Admin {
  id Int @default(autoincrement()) @id
  name String
  email String @unique
}